@page "/mobile"
@inject IJSRuntime jsRuntime
@inject CVCreator cvCreator
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudGrid Style="position:fixed;">
    <MudItem xs="12">
        <MudToolBar>
            <MudSpacer />
            <MudFab StartIcon="@Icons.Filled.Save" Color="Color.Primary" Disabled="@(!cvform_valid)" Label="Save CV" OnClick="SaveChanges" />
        </MudToolBar>
    </MudItem>
</MudGrid>
<MudContainer Style="margin-top: 64px">
    @if (!contactInfo && !resume && !experience && !education && !skill && !reference)
    {
        <MudPaper Elevation="0" Class="d-flex d-xxl-none flex-wrap gap-1 ma-2">
            <MudPaper Elevation="0" Outlined=true Class="ma-2 pa-8 cursor-pointer" onclick="@(() => ShowContact())" Width="100%">
                <MudIcon Class="d-inline" Icon="@Icons.Material.Filled.AccountCircle" Title="Favorite" />
                <MudText Typo="Typo.h4" Class="d-inline">Contact info</MudText>
            </MudPaper>
            <MudPaper Class="pa-8 ma-2 cursor-pointer" Width="100%" Outlined="true" onclick="@(() => ShowSummary())">
                <MudIcon Class="d-inline" Icon="@Icons.Material.Filled.TextSnippet" Title="Favorite" />
                <MudText Typo="Typo.h4" Class="d-inline">Resume</MudText>
            </MudPaper>
            <MudPaper Class="pa-8 ma-2 cursor-pointer" Width="100%" Outlined="true" onclick="@(() => ShowExperience())">
                <MudIcon Class="d-inline" Icon="@Icons.Material.Filled.Work" Title="Favorite" />
                <MudText Typo="Typo.h4" Class="d-inline">Work experience</MudText>
            </MudPaper>
            <MudPaper Class="pa-8 ma-2 cursor-pointer" Width="100%" Outlined="true" onclick="@(() => ShowEducation())">
                <MudIcon Class="d-inline" Icon="@Icons.Material.Filled.School" Title="Favorite" />
                <MudText Typo="Typo.h4" Class="d-inline">Education</MudText>
            </MudPaper>
            <MudPaper Class="pa-8 ma-2 cursor-pointer" Width="100%" Outlined="true" onclick="@(() => ShowSkills())">
                <MudIcon Class="d-inline" Icon="@Icons.Material.Filled.Lightbulb" Title="Favorite" />
                <MudText Typo="Typo.h4" Class="d-inline">Skills</MudText>
            </MudPaper>
            <MudPaper Class="pa-8 ma-2 cursor-pointer" Width="100%" Outlined="true" onclick="@(() => ShowReferences())">
                <MudIcon Class="d-inline" Icon="@Icons.Material.Filled.Email" Title="Favorite" />
                <MudText Typo="Typo.h4" Class="d-inline">Reference</MudText>
            </MudPaper>
        </MudPaper>
    }
    @if (contactInfo && !visible_list)
    {
        <MudPaper Elevation="0" Class="cursor-pointer ma-2">
            <MudButton Class="ma-2" OnClick="GoBack">Back</MudButton>
            <MudCard Outlined=true>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText><b>CV Details</b></MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudForm @bind-IsValid="@cvform_valid" Model="@cv" ValidationDelay="0">
                        <MudCard Elevation="0">
                            <MudCardContent>
                                <MudTextField For="@(() => cv.FirstName)" @bind-Value="cv.FirstName" Label="First Name" />
                                <MudTextField For="@(() => cv.LastName)" @bind-Value="cv.LastName" Label="Last Name" />
                                <MudTextField For="@(() => cv.Occupation)" @bind-Value="cv.Occupation" Label="Occupation" />
                                <MudTextField For="@(() => cv.Email)" @bind-Value="cv.Email" Label="Email" InputType="InputType.Email" />
                            </MudCardContent>
                        </MudCard>
                    </MudForm>
                </MudCardContent>
            </MudCard>
        </MudPaper>
    }
    @if (resume && !visible_list)
    {
        <MudPaper Elevation="0" Class="cursor-pointer ma-2">
            <MudButton Class="ma-2" OnClick="GoBack">Back</MudButton>
            <CardSummary cv="cv" />
        </MudPaper>
    }
    @if (experience && !visible_list)
    {
        <MudPaper Elevation="0" Class="cursor-pointer ma-2">
            <MudButton Class="ma-2" OnClick="GoBack">Back</MudButton>
            <CardExperience cv="cv" />
        </MudPaper>
    }
    @if (education && !visible_list)
    {
        <MudPaper Elevation="0" Class="cursor-pointer ma-2">
            <MudButton Class="ma-2" OnClick="GoBack">Back</MudButton>
            <CardEducation cv="cv" />
        </MudPaper>
    }
    @if (skill && !visible_list)
    {
        <MudPaper Elevation="0" Class="cursor-pointer ma-2">
            <MudButton Class="ma-2" OnClick="GoBack">Back</MudButton>
            <CardSkill cv="cv" />
        </MudPaper>
    }
    @if (reference && !visible_list)
    {
        <MudPaper Elevation="0" Class="cursor-pointer ma-2">
            <MudButton Class="ma-2" OnClick="GoBack">Back</MudButton>
            <CardReference cv="cv" />
        </MudPaper>
    }
</MudContainer>


@code {
    //Profile _profile = new();
    bool cvform_valid = false;
    public bool Saving { get; set; }
    CV cv = new();
    bool contactInfo, resume, experience, education, skill, reference;
    bool visible_list = true;

    async Task GoBack()
    {
        visible_list = true;
        contactInfo = resume = experience = education = skill = reference = false;
    }

    async Task ShowContact()
    {
        contactInfo = true;
        visible_list = false;
    }

    async Task ShowSummary()
    {
        resume = true;
        visible_list = false;
    }
    async Task ShowExperience()
    {
        experience = true;
        visible_list = false;
    }
    async Task ShowEducation()
    {
        education = true;
        visible_list = false;
    }
    async Task ShowSkills()
    {
        skill = true;
        visible_list = false;
    }
    async Task ShowReferences()
    {
        reference = true;
        visible_list = false;
    }

    async Task SaveChanges()
    {
        Saving = true;
        await cvCreator.Create(cv);
        Saving = false;
    }
}
